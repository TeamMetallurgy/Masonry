package com.teammetallurgy.masonry.blocks;

import com.teammetallurgy.masonry.Masonry;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.material.MapColor;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

import java.util.ArrayList;
import java.util.Collection;
import java.util.function.Supplier;

public class MasonryBlocks {
    public static final DeferredRegister<Block> BLOCK_DEFERRED = DeferredRegister.create(ForgeRegistries.BLOCKS, Masonry.MOD_ID);
    public static final DeferredRegister<Item> ITEM_DEFERRED = DeferredRegister.create(ForgeRegistries.ITEMS, Masonry.MOD_ID);
    public static final Collection<RegistryObject<Item>> ITEMS_FOR_TAB_LIST = new ArrayList<>();

    //public static final RegistryObject<Block> devBlock = register("devblock", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_TILED = register("andesitetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_TILED = register("darkprismarinetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_TILED = register("dioritetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> END_STONE_TILED = register("endstonetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.SAND).strength(3.0F, 9.0F)));
    public static final RegistryObject<Block> GRANITE_TILED = register("granitetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> NETHERRACK_TILED = register("netherracktiled", () -> new Block(Block.Properties.of().mapColor(MapColor.NETHER).strength(0.4F, 0.4F)));
    public static final RegistryObject<Block> OBSIDIAN_TILED = register("obsidiantiled", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(50.0F, 1200.0F)));
    public static final RegistryObject<Block> PRISMARINE_TILED = register("prismarinetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CARVED_CREEPER = register("stonecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CARVED_DERP = register("stonecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CARVED_VILLAGER = register("stonecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CARVED_WITHER = register("stonecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CARVED_WRITING = register("stonecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_COLUMN = register("stonecolumn", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_CUT = register("stonecut", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_ENGRAVED = register("stoneengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_PANELS = register("stonepanels", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_PAVERS = register("stonepavers", () -> new GlazedTerracottaBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_PILLAR = register("stonepillar", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_POLISHED = register("stonepolished", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_ROUGH_CUT = register("stoneroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_TILED = register("stonetiled", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CARVED_CREEPER = register("granitecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CARVED_DERP = register("granitecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CARVED_VILLAGER = register("granitecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CARVED_WITHER = register("granitecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CARVED_WRITING = register("granitecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_COLUMN = register("granitecolumn", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CUT = register("granitecut", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_ENGRAVED = register("graniteengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_PANELS = register("granitepanels", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_PAVERS = register("granitepavers", () -> new GlazedTerracottaBlock(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_PILLAR = register("granitepillar", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_ROUGH_CUT = register("graniteroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CARVED_CREEPER = register("andesitecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CARVED_DERP = register("andesitecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CARVED_VILLAGER = register("andesitecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CARVED_WITHER = register("andesitecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CARVED_WRITING = register("andesitecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_COLUMN = register("andesitecolumn", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CUT = register("andesitecut", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_ENGRAVED = register("andesiteengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_PANELS = register("andesitepanels", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_PAVERS = register("andesitepavers", () -> new GlazedTerracottaBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_PILLAR = register("andesitepillar", () -> new RotatedPillarBlock(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_ROUGH_CUT = register("andesiteroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CARVED_CREEPER = register("dioritecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CARVED_DERP = register("dioritecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CARVED_VILLAGER = register("dioritecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CARVED_WITHER = register("dioritecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CARVED_WRITING = register("dioritecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_COLUMN = register("dioritecolumn", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CUT = register("dioritecut", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_ENGRAVED = register("dioriteengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_PANELS = register("dioritepanels", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_PAVERS = register("dioritepavers", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_PILLAR = register("dioritepillar", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_ROUGH_CUT = register("dioriteroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_CHISELED = register("dioritechiseled", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_COBBLED = register("dioritecobbled", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_COBBLED_MOSSY = register("dioritecobbledmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_DIAMOND_PAVERS = register("dioritediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS = register("dioritelargebricks", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_CRACKED = register("dioritelargebrickscracked", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_MOSSY = register("dioritelargebricksmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DIORITE_SMALL_BRICK = register("dioritesmallbrick", () -> new Block(Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_CREEPER = register("darkprismarinecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_DERP = register("darkprismarinecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_VILLAGER = register("darkprismarinecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WITHER = register("darkprismarinecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WRITING = register("darkprismarinecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_COLUMN = register("darkprismarinecolumn", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CUT = register("darkprismarinecut", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_ENGRAVED = register("darkprismarineengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_PAVERS = register("darkprismarinepavers", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_PILLAR = register("darkprismarinepillar", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_POLISHED = register("darkprismarinepolished", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_ROUGH_CUT = register("darkprismarineroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_CHISELED = register("darkprismarinechiseled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED = register("darkprismarinecobbled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED_MOSSY = register("darkprismarinecobbledmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_DIAMOND_PAVERS = register("darkprismarinediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS = register("darkprismarinelargebricks", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED = register("darkprismarinelargebrickscracked", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY = register("darkprismarinelargebricksmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> DARK_PRISMARINE_SMALL_BRICK = register("darkprismarinesmallbrick", () -> new Block(Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CARVED_CREEPER = register("prismarinecarvedcreeper", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CARVED_DERP = register("prismarinecarvedderp", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CARVED_VILLAGER = register("prismarinecarvedvillager", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WITHER = register("prismarinecarvedwither", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WRITING = register("prismarinecarvedwriting", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_COLUMN = register("prismarinecolumn", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CUT = register("prismarinecut", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_ENGRAVED = register("prismarineengraved", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_PANELS = register("prismarinepanels", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_PILLAR = register("prismarinepillar", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_POLISHED = register("prismarinepolished", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_ROUGH_CUT = register("prismarineroughcut", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_CHISELED = register("prismarinechiseled", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_COBBLED = register("prismarinecobbled", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_COBBLED_MOSSY = register("prismarinecobbledmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_DIAMOND_PAVERS = register("prismarinediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS = register("prismarinelargebricks", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_CRACKED = register("prismarinelargebrickscracked", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_MOSSY = register("prismarinelargebricksmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> PRISMARINE_SMALL_BRICK = register("prismarinesmallbrick", () -> new Block(Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> STONE_DIAMOND_PAVERS = register("stonediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_CHISELED = register("granitechiseled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_COBBLED = register("granitecobbled", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_COBBLED_MOSSY = register("granitecobbledmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_DIAMOND_PAVERS = register("granitediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS = register("granitelargebricks", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_CRACKED = register("granitelargebrickscracked", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_MOSSY = register("granitelargebricksmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> GRANITE_SMALL_BRICK = register("granitesmallbrick", () -> new Block(Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_CHISELED = register("andesitechiseled", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_COBBLED = register("andesitecobbled", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_COBBLED_MOSSY = register("andesitecobbledmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_DIAMOND_PAVERS = register("andesitediamondpavers", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS = register("andesitelargebricks", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_CRACKED = register("andesitelargebrickscracked", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_MOSSY = register("andesitelargebricksmossy", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));
    public static final RegistryObject<Block> ANDESITE_SMALL_BRICK = register("andesitesmallbrick", () -> new Block(Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F)));

    /**
     * Wall Blocks
     */
    public static final RegistryObject<Block> DARK_PRISMARINE_TILED_WALL = register("darkprismarinetiledwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_TILED.get())));
    public static final RegistryObject<Block> DIORITE_TILED_WALL = register("dioritetiledwall", () -> new WallBlock(Block.Properties.copy(DIORITE_TILED.get())));
    public static final RegistryObject<Block> END_STONE_TILED_WALL = register("endstonetiledwall", () -> new WallBlock(Block.Properties.copy(END_STONE_TILED.get())));
    public static final RegistryObject<Block> NETHERRACK_TILED_WALL = register("netherracktiledwall", () -> new WallBlock(Block.Properties.copy(NETHERRACK_TILED.get())));
    public static final RegistryObject<Block> OBSIDIAN_TILED_WALL = register("obsidiantiledwall", () -> new WallBlock(Block.Properties.copy(OBSIDIAN_TILED.get())));
    public static final RegistryObject<Block> PRISMARINE_TILED_WALL = register("prismarinetiledwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_TILED.get())));
    public static final RegistryObject<Block> STONE_CARVED_CREEPER_WALL = register("stonecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(STONE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> STONE_CARVED_DERP_WALL = register("stonecarvedderpwall", () -> new WallBlock(Block.Properties.copy(STONE_CARVED_DERP.get())));
    public static final RegistryObject<Block> STONE_CARVED_VILLAGER_WALL = register("stonecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(STONE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> STONE_CARVED_WITHER_WALL = register("stonecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(STONE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> STONE_CARVED_WRITING_WALL = register("stonecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(STONE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> STONE_COLUMN_WALL = register("stonecolumnwall", () -> new WallBlock(Block.Properties.copy(STONE_COLUMN.get())));
    public static final RegistryObject<Block> STONE_CUT_WALL = register("stonecutwall", () -> new WallBlock(Block.Properties.copy(STONE_CUT.get())));
    public static final RegistryObject<Block> STONE_ENGRAVED_WALL = register("stoneengravedwall", () -> new WallBlock(Block.Properties.copy(STONE_ENGRAVED.get())));
    public static final RegistryObject<Block> STONE_PANELS_WALL = register("stonepanelswall", () -> new WallBlock(Block.Properties.copy(STONE_PANELS.get())));
    public static final RegistryObject<Block> STONE_PAVERS_WALL = register("stonepaverswall", () -> new WallBlock(Block.Properties.copy(STONE_PAVERS.get())));
    public static final RegistryObject<Block> STONE_PILLAR_WALL = register("stonepillarwall", () -> new WallBlock(Block.Properties.copy(STONE_PILLAR.get())));
    public static final RegistryObject<Block> STONE_POLISHED_WALL = register("stonepolishedwall", () -> new WallBlock(Block.Properties.copy(STONE_POLISHED.get())));
    public static final RegistryObject<Block> STONE_ROUGH_CUT_WALL = register("stoneroughcutwall", () -> new WallBlock(Block.Properties.copy(STONE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> STONE_TILED_WALL = register("stonetiledwall", () -> new WallBlock(Block.Properties.copy(STONE_TILED.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_CREEPER_WALL = register("granitecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_DERP_WALL = register("granitecarvedderpwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_VILLAGER_WALL = register("granitecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_WITHER_WALL = register("granitecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_WRITING_WALL = register("granitecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> GRANITE_COLUMN_WALL = register("granitecolumnwall", () -> new WallBlock(Block.Properties.copy(GRANITE_COLUMN.get())));
    public static final RegistryObject<Block> GRANITE_CUT_WALL = register("granitecutwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CUT.get())));
    public static final RegistryObject<Block> GRANITE_ENGRAVED_WALL = register("graniteengravedwall", () -> new WallBlock(Block.Properties.copy(GRANITE_ENGRAVED.get())));
    public static final RegistryObject<Block> GRANITE_PANELS_WALL = register("granitepanelswall", () -> new WallBlock(Block.Properties.copy(GRANITE_PANELS.get())));
    public static final RegistryObject<Block> GRANITE_PAVERS_WALL = register("granitepaverswall", () -> new WallBlock(Block.Properties.copy(GRANITE_PAVERS.get())));
    public static final RegistryObject<Block> GRANITE_PILLAR_WALL = register("granitepillarwall", () -> new WallBlock(Block.Properties.copy(GRANITE_PILLAR.get())));
    public static final RegistryObject<Block> GRANITE_POLISHED_WALL = register("granitepolishedwall", () -> new WallBlock(Block.Properties.copy(Blocks.POLISHED_GRANITE)));
    public static final RegistryObject<Block> GRANITE_ROUGH_CUT_WALL = register("graniteroughcutwall", () -> new WallBlock(Block.Properties.copy(GRANITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> GRANITE_TILED_WALL = register("granitetiledwall", () -> new WallBlock(Block.Properties.copy(GRANITE_TILED.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_CREEPER_WALL = register("andesitecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_DERP_WALL = register("andesitecarvedderpwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_VILLAGER_WALL = register("andesitecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_WITHER_WALL = register("andesitecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_WRITING_WALL = register("andesitecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> ANDESITE_COLUMN_WALL = register("andesitecolumnwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_COLUMN.get())));
    public static final RegistryObject<Block> ANDESITE_CUT_WALL = register("andesitecutwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CUT.get())));
    public static final RegistryObject<Block> ANDESITE_ENGRAVED_WALL = register("andesiteengravedwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_ENGRAVED.get())));
    public static final RegistryObject<Block> ANDESITE_PANELS_WALL = register("andesitepanelswall", () -> new WallBlock(Block.Properties.copy(ANDESITE_PANELS.get())));
    public static final RegistryObject<Block> ANDESITE_PAVERS_WALL = register("andesitepaverswall", () -> new WallBlock(Block.Properties.copy(ANDESITE_PAVERS.get())));
    public static final RegistryObject<Block> ANDESITE_PILLAR_WALL = register("andesitepillarwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_PILLAR.get())));
    public static final RegistryObject<Block> ANDESITE_POLISHED_WALL = register("andesitepolishedwall", () -> new WallBlock(Block.Properties.copy(Blocks.POLISHED_ANDESITE)));
    public static final RegistryObject<Block> ANDESITE_ROUGH_CUT_WALL = register("andesiteroughcutwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> ANDESITE_TILED_WALL = register("andesitetiledwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_TILED.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_CREEPER_WALL = register("dioritecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_DERP_WALL = register("dioritecarvedderpwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_VILLAGER_WALL = register("dioritecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_WITHER_WALL = register("dioritecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_WRITING_WALL = register("dioritecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> DIORITE_COLUMN_WALL = register("dioritecolumnwall", () -> new WallBlock(Block.Properties.copy(DIORITE_COLUMN.get())));
    public static final RegistryObject<Block> DIORITE_CUT_WALL = register("dioritecutwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CUT.get())));
    public static final RegistryObject<Block> DIORITE_ENGRAVED_WALL = register("dioriteengravedwall", () -> new WallBlock(Block.Properties.copy(DIORITE_ENGRAVED.get())));
    public static final RegistryObject<Block> DIORITE_PANELS_WALL = register("dioritepanelswall", () -> new WallBlock(Block.Properties.copy(DIORITE_PANELS.get())));
    public static final RegistryObject<Block> DIORITE_PAVERS_WALL = register("dioritepaverswall", () -> new WallBlock(Block.Properties.copy(DIORITE_PAVERS.get())));
    public static final RegistryObject<Block> DIORITE_PILLAR_WALL = register("dioritepillarwall", () -> new WallBlock(Block.Properties.copy(DIORITE_PILLAR.get())));
    public static final RegistryObject<Block> DIORITE_POLISHED_WALL = register("dioritepolishedwall", () -> new WallBlock(Block.Properties.copy(Blocks.POLISHED_DIORITE)));
    public static final RegistryObject<Block> DIORITE_ROUGH_CUT_WALL = register("dioriteroughcutwall", () -> new WallBlock(Block.Properties.copy(DIORITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> DIORITE_CHISELED_WALL = register("dioritechiseledwall", () -> new WallBlock(Block.Properties.copy(DIORITE_CHISELED.get())));
    public static final RegistryObject<Block> DIORITE_COBBLED_WALL = register("dioritecobbledwall", () -> new WallBlock(Block.Properties.copy(DIORITE_COBBLED.get())));
    public static final RegistryObject<Block> DIORITE_COBBLED_MOSSY_WALL = register("dioritecobbledmossywall", () -> new WallBlock(Block.Properties.copy(DIORITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> DIORITE_DIAMOND_PAVERS_WALL = register("dioritediamondpaverswall", () -> new WallBlock(Block.Properties.copy(DIORITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_WALL = register("dioritelargebrickswall", () -> new WallBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_CRACKED_WALL = register("dioritelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_MOSSY_WALL = register("dioritelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> DIORITE_SMALL_BRICK_WALL = register("dioritesmallbrickwall", () -> new WallBlock(Block.Properties.copy(DIORITE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_CREEPER_WALL = register("darkprismarinecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_DERP_WALL = register("darkprismarinecarvedderpwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_DERP.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_VILLAGER_WALL = register("darkprismarinecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WITHER_WALL = register("darkprismarinecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WRITING_WALL = register("darkprismarinecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COLUMN_WALL = register("darkprismarinecolumnwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_COLUMN.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CUT_WALL = register("darkprismarinecutwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CUT.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_ENGRAVED_WALL = register("darkprismarineengravedwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_ENGRAVED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_PANELS_WALL = register("darkprismarinepanelswall", () -> new WallBlock(Block.Properties.copy(Blocks.DARK_PRISMARINE)));
    public static final RegistryObject<Block> DARK_PRISMARINE_PAVERS_WALL = register("darkprismarinepaverswall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_PAVERS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_PILLAR_WALL = register("darkprismarinepillarwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_PILLAR.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_POLISHED_WALL = register("darkprismarinepolishedwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_POLISHED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_ROUGH_CUT_WALL = register("darkprismarineroughcutwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CHISELED_WALL = register("darkprismarinechiseledwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_CHISELED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED_WALL = register("darkprismarinecobbledwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_COBBLED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED_MOSSY_WALL = register("darkprismarinecobbledmossywall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_DIAMOND_PAVERS_WALL = register("darkprismarinediamondpaverswall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_WALL = register("darkprismarinelargebrickswall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED_WALL = register("darkprismarinelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY_WALL = register("darkprismarinelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_SMALL_BRICK_WALL = register("darkprismarinesmallbrickwall", () -> new WallBlock(Block.Properties.copy(DARK_PRISMARINE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_CREEPER_WALL = register("prismarinecarvedcreeperwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_DERP_WALL = register("prismarinecarvedderpwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CARVED_DERP.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_VILLAGER_WALL = register("prismarinecarvedvillagerwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WITHER_WALL = register("prismarinecarvedwitherwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WRITING_WALL = register("prismarinecarvedwritingwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> PRISMARINE_COLUMN_WALL = register("prismarinecolumnwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_COLUMN.get())));
    public static final RegistryObject<Block> PRISMARINE_CUT_WALL = register("prismarinecutwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CUT.get())));
    public static final RegistryObject<Block> PRISMARINE_ENGRAVED_WALL = register("prismarineengravedwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_ENGRAVED.get())));
    public static final RegistryObject<Block> PRISMARINE_PANELS_WALL = register("prismarinepanelswall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_PANELS.get())));
    public static final RegistryObject<Block> PRISMARINE_PAVERS_WALL = register("prismarinepaverswall", () -> new WallBlock(Block.Properties.copy(Blocks.PRISMARINE)));
    public static final RegistryObject<Block> PRISMARINE_PILLAR_WALL = register("prismarinepillarwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_PILLAR.get())));
    public static final RegistryObject<Block> PRISMARINE_POLISHED_WALL = register("prismarinepolishedwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_POLISHED.get())));
    public static final RegistryObject<Block> PRISMARINE_ROUGH_CUT_WALL = register("prismarineroughcutwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> PRISMARINE_CHISELED_WALL = register("prismarinechiseledwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_CHISELED.get())));
    public static final RegistryObject<Block> PRISMARINE_COBBLED_WALL = register("prismarinecobbledwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_COBBLED.get())));
    public static final RegistryObject<Block> PRISMARINE_COBBLED_MOSSY_WALL = register("prismarinecobbledmossywall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> PRISMARINE_DIAMOND_PAVERS_WALL = register("prismarinediamondpaverswall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_WALL = register("prismarinelargebrickswall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_CRACKED_WALL = register("prismarinelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_MOSSY_WALL = register("prismarinelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> PRISMARINE_SMALL_BRICK_WALL = register("prismarinesmallbrickwall", () -> new WallBlock(Block.Properties.copy(PRISMARINE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> STONE_CHISELED_WALL = register("stonechiseledwall", () -> new WallBlock(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
    public static final RegistryObject<Block> STONE_COBBLED_WALL = register("stonecobbledwall", () -> new WallBlock(Block.Properties.copy(Blocks.COBBLESTONE)));
    public static final RegistryObject<Block> STONE_COBBLED_MOSSY_WALL = register("stonecobbledmossywall", () -> new WallBlock(Block.Properties.copy(Blocks.MOSSY_COBBLESTONE)));
    public static final RegistryObject<Block> STONE_DIAMOND_PAVERS_WALL = register("stonediamondpaverswall", () -> new WallBlock(Block.Properties.copy(STONE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> STONE_LARGE_BRICKS_WALL = register("stonelargebrickswall", () -> new WallBlock(Block.Properties.copy(Blocks.STONE_BRICKS)));
    public static final RegistryObject<Block> STONE_LARGE_BRICKS_CRACKED_WALL = register("stonelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
    public static final RegistryObject<Block> STONE_LARGE_BRICKS_MOSSY_WALL = register("stonelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(Blocks.MOSSY_STONE_BRICKS)));
    public static final RegistryObject<Block> GRANITE_CHISELED_WALL = register("granitechiseledwall", () -> new WallBlock(Block.Properties.copy(GRANITE_CHISELED.get())));
    public static final RegistryObject<Block> GRANITE_COBBLED_WALL = register("granitecobbledwall", () -> new WallBlock(Block.Properties.copy(GRANITE_COBBLED.get())));
    public static final RegistryObject<Block> GRANITE_COBBLED_MOSSY_WALL = register("granitecobbledmossywall", () -> new WallBlock(Block.Properties.copy(GRANITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> GRANITE_DIAMOND_PAVERS_WALL = register("granitediamondpaverswall", () -> new WallBlock(Block.Properties.copy(GRANITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_WALL = register("granitelargebrickswall", () -> new WallBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_CRACKED_WALL = register("granitelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_MOSSY_WALL = register("granitelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> GRANITE_SMALL_BRICK_WALL = register("granitesmallbrickwall", () -> new WallBlock(Block.Properties.copy(GRANITE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> ANDESITE_CHISELED_WALL = register("andesitechiseledwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_CHISELED.get())));
    public static final RegistryObject<Block> ANDESITE_COBBLED_WALL = register("andesitecobbledwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_COBBLED.get())));
    public static final RegistryObject<Block> ANDESITE_COBBLED_MOSSY_WALL = register("andesitecobbledmossywall", () -> new WallBlock(Block.Properties.copy(ANDESITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> ANDESITE_DIAMOND_PAVERS_WALL = register("andesitediamondpaverswall", () -> new WallBlock(Block.Properties.copy(ANDESITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_WALL = register("andesitelargebrickswall", () -> new WallBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_CRACKED_WALL = register("andesitelargebrickscrackedwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_MOSSY_WALL = register("andesitelargebricksmossywall", () -> new WallBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> ANDESITE_SMALL_BRICK_WALL = register("andesitesmallbrickwall", () -> new WallBlock(Block.Properties.copy(ANDESITE_SMALL_BRICK.get())));

    /**
     * Slab Blocks
     */
    public static final RegistryObject<Block> DARK_PRISMARINE_TILED_SLAB = register("darkprismarinetiledslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_TILED.get())));
    public static final RegistryObject<Block> DIORITE_TILED_SLAB = register("dioritetiledslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_TILED.get())));
    public static final RegistryObject<Block> END_STONE_TILED_SLAB = register("endstonetiledslab", () -> new SlabBlock(Block.Properties.copy(END_STONE_TILED.get())));
    public static final RegistryObject<Block> NETHERRACK_TILED_SLAB = register("netherracktiledslab", () -> new SlabBlock(Block.Properties.copy(NETHERRACK_TILED.get())));
    public static final RegistryObject<Block> OBSIDIAN_TILED_SLAB = register("obsidiantiledslab", () -> new SlabBlock(Block.Properties.copy(OBSIDIAN_TILED.get())));
    public static final RegistryObject<Block> PRISMARINE_TILED_SLAB = register("prismarinetiledslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_TILED.get())));
    public static final RegistryObject<Block> STONE_CARVED_CREEPER_SLAB = register("stonecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(STONE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> STONE_CARVED_DERP_SLAB = register("stonecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(STONE_CARVED_DERP.get())));
    public static final RegistryObject<Block> STONE_CARVED_VILLAGER_SLAB = register("stonecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(STONE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> STONE_CARVED_WITHER_SLAB = register("stonecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(STONE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> STONE_CARVED_WRITING_SLAB = register("stonecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(STONE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> STONE_COLUMN_SLAB = register("stonecolumnslab", () -> new SlabBlock(Block.Properties.copy(STONE_COLUMN.get())));
    public static final RegistryObject<Block> STONE_CUT_SLAB = register("stonecutslab", () -> new SlabBlock(Block.Properties.copy(STONE_CUT.get())));
    public static final RegistryObject<Block> STONE_ENGRAVED_SLAB = register("stoneengravedslab", () -> new SlabBlock(Block.Properties.copy(STONE_ENGRAVED.get())));
    public static final RegistryObject<Block> STONE_PANELS_SLAB = register("stonepanelsslab", () -> new SlabBlock(Block.Properties.copy(STONE_PANELS.get())));
    public static final RegistryObject<Block> STONE_PAVERS_SLAB = register("stonepaversslab", () -> new SlabBlock(Block.Properties.copy(STONE_PAVERS.get())));
    public static final RegistryObject<Block> STONE_PILLAR_SLAB = register("stonepillarslab", () -> new SlabBlock(Block.Properties.copy(STONE_PILLAR.get())));
    public static final RegistryObject<Block> STONE_POLISHED_SLAB = register("stonepolishedslab", () -> new SlabBlock(Block.Properties.copy(STONE_POLISHED.get())));
    public static final RegistryObject<Block> STONE_ROUGH_CUT_SLAB = register("stoneroughcutslab", () -> new SlabBlock(Block.Properties.copy(STONE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> STONE_TILED_SLAB = register("stonetiledslab", () -> new SlabBlock(Block.Properties.copy(STONE_TILED.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_CREEPER_SLAB = register("granitecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_DERP_SLAB = register("granitecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_VILLAGER_SLAB = register("granitecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_WITHER_SLAB = register("granitecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> GRANITE_CARVED_WRITING_SLAB = register("granitecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> GRANITE_COLUMN_SLAB = register("granitecolumnslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_COLUMN.get())));
    public static final RegistryObject<Block> GRANITE_CUT_SLAB = register("granitecutslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CUT.get())));
    public static final RegistryObject<Block> GRANITE_ENGRAVED_SLAB = register("graniteengravedslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_ENGRAVED.get())));
    public static final RegistryObject<Block> GRANITE_PANELS_SLAB = register("granitepanelsslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_PANELS.get())));
    public static final RegistryObject<Block> GRANITE_PAVERS_SLAB = register("granitepaversslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_PAVERS.get())));
    public static final RegistryObject<Block> GRANITE_PILLAR_SLAB = register("granitepillarslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_PILLAR.get())));
    public static final RegistryObject<Block> GRANITE_ROUGH_CUT_SLAB = register("graniteroughcutslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> GRANITE_TILED_SLAB = register("granitetiledslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_TILED.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_CREEPER_SLAB = register("andesitecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_DERP_SLAB = register("andesitecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_VILLAGER_SLAB = register("andesitecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_WITHER_SLAB = register("andesitecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> ANDESITE_CARVED_WRITING_SLAB = register("andesitecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> ANDESITE_COLUMN_SLAB = register("andesitecolumnslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_COLUMN.get())));
    public static final RegistryObject<Block> ANDESITE_CUT_SLAB = register("andesitecutslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CUT.get())));
    public static final RegistryObject<Block> ANDESITE_ENGRAVED_SLAB = register("andesiteengravedslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_ENGRAVED.get())));
    public static final RegistryObject<Block> ANDESITE_PANELS_SLAB = register("andesitepanelsslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_PANELS.get())));
    public static final RegistryObject<Block> ANDESITE_PAVERS_SLAB = register("andesitepaversslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_PAVERS.get())));
    public static final RegistryObject<Block> ANDESITE_PILLAR_SLAB = register("andesitepillarslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_PILLAR.get())));
    public static final RegistryObject<Block> ANDESITE_ROUGH_CUT_SLAB = register("andesiteroughcutslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> ANDESITE_TILED_SLAB = register("andesitetiledslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_TILED.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_CREEPER_SLAB = register("dioritecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_DERP_SLAB = register("dioritecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CARVED_DERP.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_VILLAGER_SLAB = register("dioritecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_WITHER_SLAB = register("dioritecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> DIORITE_CARVED_WRITING_SLAB = register("dioritecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> DIORITE_COLUMN_SLAB = register("dioritecolumnslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_COLUMN.get())));
    public static final RegistryObject<Block> DIORITE_CUT_SLAB = register("dioritecutslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CUT.get())));
    public static final RegistryObject<Block> DIORITE_ENGRAVED_SLAB = register("dioriteengravedslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_ENGRAVED.get())));
    public static final RegistryObject<Block> DIORITE_PANELS_SLAB = register("dioritepanelsslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_PANELS.get())));
    public static final RegistryObject<Block> DIORITE_PAVERS_SLAB = register("dioritepaversslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_PAVERS.get())));
    public static final RegistryObject<Block> DIORITE_PILLAR_SLAB = register("dioritepillarslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_PILLAR.get())));
    public static final RegistryObject<Block> DIORITE_ROUGH_CUT_SLAB = register("dioriteroughcutslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> DIORITE_CHISELED_SLAB = register("dioritechiseledslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_CHISELED.get())));
    public static final RegistryObject<Block> DIORITE_COBBLED_SLAB = register("dioritecobbledslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_COBBLED.get())));
    public static final RegistryObject<Block> DIORITE_COBBLED_MOSSY_SLAB = register("dioritecobbledmossyslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> DIORITE_DIAMOND_PAVERS_SLAB = register("dioritediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_SLAB = register("dioritelargebricksslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_CRACKED_SLAB = register("dioritelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> DIORITE_LARGE_BRICKS_MOSSY_SLAB = register("dioritelargebricksmossyslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> DIORITE_SMALL_BRICK_SLAB = register("dioritesmallbrickslab", () -> new SlabBlock(Block.Properties.copy(DIORITE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_CREEPER_SLAB = register("darkprismarinecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_DERP_SLAB = register("darkprismarinecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_DERP.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_VILLAGER_SLAB = register("darkprismarinecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WITHER_SLAB = register("darkprismarinecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CARVED_WRITING_SLAB = register("darkprismarinecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COLUMN_SLAB = register("darkprismarinecolumnslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_COLUMN.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CUT_SLAB = register("darkprismarinecutslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CUT.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_ENGRAVED_SLAB = register("darkprismarineengravedslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_ENGRAVED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_PAVERS_SLAB = register("darkprismarinepaversslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_PAVERS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_PILLAR_SLAB = register("darkprismarinepillarslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_PILLAR.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_POLISHED_SLAB = register("darkprismarinepolishedslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_POLISHED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_ROUGH_CUT_SLAB = register("darkprismarineroughcutslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_CHISELED_SLAB = register("darkprismarinechiseledslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_CHISELED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED_SLAB = register("darkprismarinecobbledslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_COBBLED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_COBBLED_MOSSY_SLAB = register("darkprismarinecobbledmossyslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_DIAMOND_PAVERS_SLAB = register("darkprismarinediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_SLAB = register("darkprismarinelargebricksslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED_SLAB = register("darkprismarinelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY_SLAB = register("darkprismarinelargebricksmossyslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> DARK_PRISMARINE_SMALL_BRICK_SLAB = register("darkprismarinesmallbrickslab", () -> new SlabBlock(Block.Properties.copy(DARK_PRISMARINE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_CREEPER_SLAB = register("prismarinecarvedcreeperslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CARVED_CREEPER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_DERP_SLAB = register("prismarinecarvedderpslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CARVED_DERP.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_VILLAGER_SLAB = register("prismarinecarvedvillagerslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CARVED_VILLAGER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WITHER_SLAB = register("prismarinecarvedwitherslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CARVED_WITHER.get())));
    public static final RegistryObject<Block> PRISMARINE_CARVED_WRITING_SLAB = register("prismarinecarvedwritingslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CARVED_WRITING.get())));
    public static final RegistryObject<Block> PRISMARINE_COLUMN_SLAB = register("prismarinecolumnslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_COLUMN.get())));
    public static final RegistryObject<Block> PRISMARINE_CUT_SLAB = register("prismarinecutslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CUT.get())));
    public static final RegistryObject<Block> PRISMARINE_ENGRAVED_SLAB = register("prismarineengravedslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_ENGRAVED.get())));
    public static final RegistryObject<Block> PRISMARINE_PANELS_SLAB = register("prismarinepanelsslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_PANELS.get())));
    public static final RegistryObject<Block> PRISMARINE_PILLAR_SLAB = register("prismarinepillarslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_PILLAR.get())));
    public static final RegistryObject<Block> PRISMARINE_POLISHED_SLAB = register("prismarinepolishedslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_POLISHED.get())));
    public static final RegistryObject<Block> PRISMARINE_ROUGH_CUT_SLAB = register("prismarineroughcutslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_ROUGH_CUT.get())));
    public static final RegistryObject<Block> PRISMARINE_CHISELED_SLAB = register("prismarinechiseledslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_CHISELED.get())));
    public static final RegistryObject<Block> PRISMARINE_COBBLED_SLAB = register("prismarinecobbledslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_COBBLED.get())));
    public static final RegistryObject<Block> PRISMARINE_COBBLED_MOSSY_SLAB = register("prismarinecobbledmossyslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> PRISMARINE_DIAMOND_PAVERS_SLAB = register("prismarinediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_SLAB = register("prismarinelargebricksslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_CRACKED_SLAB = register("prismarinelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> PRISMARINE_LARGE_BRICKS_MOSSY_SLAB = register("prismarinelargebricksmossyslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> PRISMARINE_SMALL_BRICK_SLAB = register("prismarinesmallbrickslab", () -> new SlabBlock(Block.Properties.copy(PRISMARINE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> STONE_CHISELED_SLAB = register("stonechiseledslab", () -> new SlabBlock(Block.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
    public static final RegistryObject<Block> STONE_DIAMOND_PAVERS_SLAB = register("stonediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(STONE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> STONE_LARGE_BRICKS_CRACKED_SLAB = register("stonelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
    public static final RegistryObject<Block> GRANITE_CHISELED_SLAB = register("granitechiseledslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_CHISELED.get())));
    public static final RegistryObject<Block> GRANITE_COBBLED_SLAB = register("granitecobbledslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_COBBLED.get())));
    public static final RegistryObject<Block> GRANITE_COBBLED_MOSSY_SLAB = register("granitecobbledmossyslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> GRANITE_DIAMOND_PAVERS_SLAB = register("granitediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_SLAB = register("granitelargebricksslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_CRACKED_SLAB = register("granitelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> GRANITE_LARGE_BRICKS_MOSSY_SLAB = register("granitelargebricksmossyslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> GRANITE_SMALL_BRICK_SLAB = register("granitesmallbrickslab", () -> new SlabBlock(Block.Properties.copy(GRANITE_SMALL_BRICK.get())));
    public static final RegistryObject<Block> ANDESITE_CHISELED_SLAB = register("andesitechiseledslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_CHISELED.get())));
    public static final RegistryObject<Block> ANDESITE_COBBLED_SLAB = register("andesitecobbledslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_COBBLED.get())));
    public static final RegistryObject<Block> ANDESITE_COBBLED_MOSSY_SLAB = register("andesitecobbledmossyslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_COBBLED_MOSSY.get())));
    public static final RegistryObject<Block> ANDESITE_DIAMOND_PAVERS_SLAB = register("andesitediamondpaversslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_DIAMOND_PAVERS.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_SLAB = register("andesitelargebricksslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_CRACKED_SLAB = register("andesitelargebrickscrackedslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS_CRACKED.get())));
    public static final RegistryObject<Block> ANDESITE_LARGE_BRICKS_MOSSY_SLAB = register("andesitelargebricksmossyslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_LARGE_BRICKS_MOSSY.get())));
    public static final RegistryObject<Block> ANDESITE_SMALL_BRICK_SLAB = register("andesitesmallbrickslab", () -> new SlabBlock(Block.Properties.copy(ANDESITE_SMALL_BRICK.get())));

    private static RegistryObject<Block> register(String name, Supplier<Block> blockSupplier) {
        RegistryObject<Block> block = BLOCK_DEFERRED.register(name, blockSupplier);

        RegistryObject<Item> blockItem = ITEM_DEFERRED.register(name, () -> new BlockItem(block.get(), new Item.Properties()));
        ITEMS_FOR_TAB_LIST.add(blockItem);

        return block;
    }
}