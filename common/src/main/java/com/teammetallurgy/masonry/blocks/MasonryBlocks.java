package com.teammetallurgy.masonry.blocks;

import com.teammetallurgy.masonry.Constants;
import com.teammetallurgy.masonry.MasonryCommon;
import com.teammetallurgy.masonry.registration.RegistrationProvider;
import com.teammetallurgy.masonry.registration.RegistryObject;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.MapColor;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.function.Function;
import java.util.function.Supplier;

public class MasonryBlocks {
    public static final RegistrationProvider<Block> BLOCK_DEFERRED = RegistrationProvider.get(BuiltInRegistries.BLOCK, Constants.MOD_ID);
    public static final RegistrationProvider<Item> ITEM_DEFERRED = RegistrationProvider.get(BuiltInRegistries.ITEM, Constants.MOD_ID);
    public static final Collection<RegistryObject<Item, BlockItem>> BLOCK_ITEMS = new ArrayList<>();
    public static final Collection<RegistryObject<Block, Block>> BLOCKS = new ArrayList<>();
    public static final HashMap<RegistryObject<Block, Block>, Supplier<Block>> BASED_ON = new HashMap<>();

    //public static final RegistryObject<Block, Block> DEV_BLOCK = register("devblock", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_TILED = register("andesite_tiled", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_TILED = register("dark_prismarine_tiled", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_TILED = register("diorite_tiled", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> END_STONE_TILED = register("end_stone_tiled", Block::new, Block.Properties.of().mapColor(MapColor.SAND).strength(3.0F, 9.0F));
    public static final RegistryObject<Block, Block> GRANITE_TILED = register("granite_tiled", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> NETHERRACK_TILED = register("netherrack_tiled", Block::new, Block.Properties.of().mapColor(MapColor.NETHER).strength(0.4F, 0.4F));
    public static final RegistryObject<Block, Block> OBSIDIAN_TILED = register("obsidian_tiled", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_BLACK).strength(50.0F, 1200.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_TILED = register("prismarine_tiled", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CARVED_CREEPER = register("stone_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CARVED_DERP = register("stone_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CARVED_VILLAGER = register("stone_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CARVED_WITHER = register("stone_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CARVED_WRITING = register("stone_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_COLUMN = register("stone_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_CUT = register("stone_cut", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_ENGRAVED = register("stone_engraved", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_PANELS = register("stone_panels", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_PAVERS = register("stone_pavers", GlazedTerracottaBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_PILLAR = register("stone_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_POLISHED = register("stone_polished", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_ROUGH_CUT = register("stone_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_TILED = register("stone_tiled", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CARVED_CREEPER = register("granite_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CARVED_DERP = register("granite_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CARVED_VILLAGER = register("granite_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WITHER = register("granite_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WRITING = register("granite_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_COLUMN = register("granite_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CUT = register("granite_cut", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_ENGRAVED = register("granite_engraved", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_PANELS = register("granite_panels", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_PAVERS = register("granite_pavers", GlazedTerracottaBlock::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_PILLAR = register("granite_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_ROUGH_CUT = register("granite_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_CREEPER = register("andesite_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_DERP = register("andesite_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_VILLAGER = register("andesite_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WITHER = register("andesite_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WRITING = register("andesite_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_COLUMN = register("andesite_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CUT = register("andesite_cut", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_ENGRAVED = register("andesite_engraved", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_PANELS = register("andesite_panels", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_PAVERS = register("andesite_pavers", GlazedTerracottaBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_PILLAR = register("andesite_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_ROUGH_CUT = register("andesite_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CARVED_CREEPER = register("diorite_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CARVED_DERP = register("diorite_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CARVED_VILLAGER = register("diorite_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WITHER = register("diorite_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WRITING = register("diorite_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_COLUMN = register("diorite_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CUT = register("diorite_cut", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_ENGRAVED = register("diorite_engraved", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_PANELS = register("diorite_panels", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_PAVERS = register("diorite_pavers", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_PILLAR = register("diorite_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_ROUGH_CUT = register("diorite_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_CHISELED = register("diorite_chiseled", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_COBBLED = register("diorite_cobbled", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_COBBLED_MOSSY = register("diorite_cobbled_mossy", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_DIAMOND_PAVERS = register("diorite_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS = register("diorite_large_bricks", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_CRACKED = register("diorite_large_bricks_cracked", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_MOSSY = register("diorite_large_bricks_mossy", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DIORITE_SMALL_BRICK = register("diorite_small_brick", Block::new, Block.Properties.of().mapColor(MapColor.QUARTZ).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_CREEPER = register("dark_prismarine_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_DERP = register("dark_prismarine_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_VILLAGER = register("dark_prismarine_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WITHER = register("dark_prismarine_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WRITING = register("dark_prismarine_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COLUMN = register("dark_prismarine_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CUT = register("dark_prismarine_cut", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ENGRAVED = register("dark_prismarine_engraved", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PAVERS = register("dark_prismarine_pavers", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PILLAR = register("dark_prismarine_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_POLISHED = register("dark_prismarine_polished", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ROUGH_CUT = register("dark_prismarine_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CHISELED = register("dark_prismarine_chiseled", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED = register("dark_prismarine_cobbled", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED_MOSSY = register("dark_prismarine_cobbled_mossy", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_DIAMOND_PAVERS = register("dark_prismarine_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS = register("dark_prismarine_large_bricks", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED = register("dark_prismarine_large_bricks_cracked", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY = register("dark_prismarine_large_bricks_mossy", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_SMALL_BRICK = register("dark_prismarine_small_brick", Block::new, Block.Properties.of().mapColor(MapColor.DIAMOND).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_CREEPER = register("prismarine_carved_creeper", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_DERP = register("prismarine_carved_derp", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_VILLAGER = register("prismarine_carved_villager", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WITHER = register("prismarine_carved_wither", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WRITING = register("prismarine_carved_writing", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_COLUMN = register("prismarine_column", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CUT = register("prismarine_cut", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_ENGRAVED = register("prismarine_engraved", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_PANELS = register("prismarine_panels", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_PILLAR = register("prismarine_pillar", RotatedPillarBlock::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_POLISHED = register("prismarine_polished", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_ROUGH_CUT = register("prismarine_rough_cut", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_CHISELED = register("prismarine_chiseled", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED = register("prismarine_cobbled", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED_MOSSY = register("prismarine_cobbled_mossy", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_DIAMOND_PAVERS = register("prismarine_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS = register("prismarine_large_bricks", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_CRACKED = register("prismarine_large_bricks_cracked", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_MOSSY = register("prismarine_large_bricks_mossy", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> PRISMARINE_SMALL_BRICK = register("prismarine_small_brick", Block::new, Block.Properties.of().mapColor(MapColor.COLOR_CYAN).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> STONE_DIAMOND_PAVERS = register("stone_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_CHISELED = register("granite_chiseled", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_COBBLED = register("granite_cobbled", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_COBBLED_MOSSY = register("granite_cobbled_mossy", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_DIAMOND_PAVERS = register("granite_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS = register("granite_large_bricks", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_CRACKED = register("granite_large_bricks_cracked", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_MOSSY = register("granite_large_bricks_mossy", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> GRANITE_SMALL_BRICK = register("granite_small_brick", Block::new, Block.Properties.of().mapColor(MapColor.DIRT).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_CHISELED = register("andesite_chiseled", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED = register("andesite_cobbled", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED_MOSSY = register("andesite_cobbled_mossy", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_DIAMOND_PAVERS = register("andesite_diamond_pavers", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS = register("andesite_large_bricks", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_CRACKED = register("andesite_large_bricks_cracked", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_MOSSY = register("andesite_large_bricks_mossy", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));
    public static final RegistryObject<Block, Block> ANDESITE_SMALL_BRICK = register("andesite_small_brick", Block::new, Block.Properties.of().mapColor(MapColor.STONE).strength(1.5F, 6.0F));

    /**
     * Wall Blocks
     */
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_TILED_WALL = register("dark_prismarine_tiled_wall", WallBlock::new, DARK_PRISMARINE_TILED);
    public static final RegistryObject<Block, Block> DIORITE_TILED_WALL = register("diorite_tiled_wall", WallBlock::new, DIORITE_TILED);
    public static final RegistryObject<Block, Block> END_STONE_TILED_WALL = register("end_stone_tiled_wall", WallBlock::new, END_STONE_TILED);
    public static final RegistryObject<Block, Block> NETHERRACK_TILED_WALL = register("netherrack_tiled_wall", WallBlock::new, NETHERRACK_TILED);
    public static final RegistryObject<Block, Block> OBSIDIAN_TILED_WALL = register("obsidian_tiled_wall", WallBlock::new, OBSIDIAN_TILED);
    public static final RegistryObject<Block, Block> PRISMARINE_TILED_WALL = register("prismarine_tiled_wall", WallBlock::new, PRISMARINE_TILED);
    public static final RegistryObject<Block, Block> STONE_CARVED_CREEPER_WALL = register("stone_carved_creeper_wall", WallBlock::new, STONE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> STONE_CARVED_DERP_WALL = register("stone_carved_derp_wall", WallBlock::new, STONE_CARVED_DERP);
    public static final RegistryObject<Block, Block> STONE_CARVED_VILLAGER_WALL = register("stone_carved_villager_wall", WallBlock::new, STONE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> STONE_CARVED_WITHER_WALL = register("stone_carved_wither_wall", WallBlock::new, STONE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> STONE_CARVED_WRITING_WALL = register("stone_carved_writing_wall", WallBlock::new, STONE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> STONE_COLUMN_WALL = register("stone_column_wall", WallBlock::new, STONE_COLUMN);
    public static final RegistryObject<Block, Block> STONE_CUT_WALL = register("stone_cut_wall", WallBlock::new, STONE_CUT);
    public static final RegistryObject<Block, Block> STONE_ENGRAVED_WALL = register("stone_engraved_wall", WallBlock::new, STONE_ENGRAVED);
    public static final RegistryObject<Block, Block> STONE_PANELS_WALL = register("stone_panels_wall", WallBlock::new, STONE_PANELS);
    public static final RegistryObject<Block, Block> STONE_PAVERS_WALL = register("stone_pavers_wall", WallBlock::new, STONE_PAVERS);
    public static final RegistryObject<Block, Block> STONE_PILLAR_WALL = register("stone_pillar_wall", WallBlock::new, STONE_PILLAR);
    public static final RegistryObject<Block, Block> STONE_POLISHED_WALL = register("stone_polished_wall", WallBlock::new, STONE_POLISHED);
    public static final RegistryObject<Block, Block> STONE_ROUGH_CUT_WALL = register("stone_rough_cut_wall", WallBlock::new, STONE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> STONE_TILED_WALL = register("stone_tiled_wall", WallBlock::new, STONE_TILED);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_CREEPER_WALL = register("granite_carved_creeper_wall", WallBlock::new, GRANITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_DERP_WALL = register("granite_carved_derp_wall", WallBlock::new, GRANITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_VILLAGER_WALL = register("granite_carved_villager_wall", WallBlock::new, GRANITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WITHER_WALL = register("granite_carved_wither_wall", WallBlock::new, GRANITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WRITING_WALL = register("granite_carved_writing_wall", WallBlock::new, GRANITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> GRANITE_COLUMN_WALL = register("granite_column_wall", WallBlock::new, GRANITE_COLUMN);
    public static final RegistryObject<Block, Block> GRANITE_CUT_WALL = register("granite_cut_wall", WallBlock::new, GRANITE_CUT);
    public static final RegistryObject<Block, Block> GRANITE_ENGRAVED_WALL = register("granite_engraved_wall", WallBlock::new, GRANITE_ENGRAVED);
    public static final RegistryObject<Block, Block> GRANITE_PANELS_WALL = register("granite_panels_wall", WallBlock::new, GRANITE_PANELS);
    public static final RegistryObject<Block, Block> GRANITE_PAVERS_WALL = register("granite_pavers_wall", WallBlock::new, GRANITE_PAVERS);
    public static final RegistryObject<Block, Block> GRANITE_PILLAR_WALL = register("granite_pillar_wall", WallBlock::new, GRANITE_PILLAR);
    public static final RegistryObject<Block, Block> GRANITE_POLISHED_WALL = register("granite_polished_wall", WallBlock::new, () -> Blocks.POLISHED_GRANITE);
    public static final RegistryObject<Block, Block> GRANITE_ROUGH_CUT_WALL = register("granite_rough_cut_wall", WallBlock::new, GRANITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> GRANITE_TILED_WALL = register("granite_tiled_wall", WallBlock::new, GRANITE_TILED);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_CREEPER_WALL = register("andesite_carved_creeper_wall", WallBlock::new, ANDESITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_DERP_WALL = register("andesite_carved_derp_wall", WallBlock::new, ANDESITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_VILLAGER_WALL = register("andesite_carved_villager_wall", WallBlock::new, ANDESITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WITHER_WALL = register("andesite_carved_wither_wall", WallBlock::new, ANDESITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WRITING_WALL = register("andesite_carved_writing_wall", WallBlock::new, ANDESITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> ANDESITE_COLUMN_WALL = register("andesite_column_wall", WallBlock::new, ANDESITE_COLUMN);
    public static final RegistryObject<Block, Block> ANDESITE_CUT_WALL = register("andesite_cut_wall", WallBlock::new, ANDESITE_CUT);
    public static final RegistryObject<Block, Block> ANDESITE_ENGRAVED_WALL = register("andesite_engraved_wall", WallBlock::new, ANDESITE_ENGRAVED);
    public static final RegistryObject<Block, Block> ANDESITE_PANELS_WALL = register("andesite_panels_wall", WallBlock::new, ANDESITE_PANELS);
    public static final RegistryObject<Block, Block> ANDESITE_PAVERS_WALL = register("andesite_pavers_wall", WallBlock::new, ANDESITE_PAVERS);
    public static final RegistryObject<Block, Block> ANDESITE_PILLAR_WALL = register("andesite_pillar_wall", WallBlock::new, ANDESITE_PILLAR);
    public static final RegistryObject<Block, Block> ANDESITE_POLISHED_WALL = register("andesite_polished_wall", WallBlock::new, () -> Blocks.POLISHED_ANDESITE);
    public static final RegistryObject<Block, Block> ANDESITE_ROUGH_CUT_WALL = register("andesite_rough_cut_wall", WallBlock::new, ANDESITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> ANDESITE_TILED_WALL = register("andesite_tiled_wall", WallBlock::new, ANDESITE_TILED);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_CREEPER_WALL = register("diorite_carved_creeper_wall", WallBlock::new, DIORITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_DERP_WALL = register("diorite_carved_derp_wall", WallBlock::new, DIORITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_VILLAGER_WALL = register("diorite_carved_villager_wall", WallBlock::new, DIORITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WITHER_WALL = register("diorite_carved_wither_wall", WallBlock::new, DIORITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WRITING_WALL = register("diorite_carved_writing_wall", WallBlock::new, DIORITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> DIORITE_COLUMN_WALL = register("diorite_column_wall", WallBlock::new, DIORITE_COLUMN);
    public static final RegistryObject<Block, Block> DIORITE_CUT_WALL = register("diorite_cut_wall", WallBlock::new, DIORITE_CUT);
    public static final RegistryObject<Block, Block> DIORITE_ENGRAVED_WALL = register("diorite_engraved_wall", WallBlock::new, DIORITE_ENGRAVED);
    public static final RegistryObject<Block, Block> DIORITE_PANELS_WALL = register("diorite_panels_wall", WallBlock::new, DIORITE_PANELS);
    public static final RegistryObject<Block, Block> DIORITE_PAVERS_WALL = register("diorite_pavers_wall", WallBlock::new, DIORITE_PAVERS);
    public static final RegistryObject<Block, Block> DIORITE_PILLAR_WALL = register("diorite_pillar_wall", WallBlock::new, DIORITE_PILLAR);
    public static final RegistryObject<Block, Block> DIORITE_POLISHED_WALL = register("diorite_polished_wall", WallBlock::new, () -> Blocks.POLISHED_DIORITE);
    public static final RegistryObject<Block, Block> DIORITE_ROUGH_CUT_WALL = register("diorite_rough_cut_wall", WallBlock::new, DIORITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> DIORITE_CHISELED_WALL = register("diorite_chiseled_wall", WallBlock::new, DIORITE_CHISELED);
    public static final RegistryObject<Block, Block> DIORITE_COBBLED_WALL = register("diorite_cobbled_wall", WallBlock::new, DIORITE_COBBLED);
    public static final RegistryObject<Block, Block> DIORITE_COBBLED_MOSSY_WALL = register("diorite_cobbled_mossy_wall", WallBlock::new, DIORITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> DIORITE_DIAMOND_PAVERS_WALL = register("diorite_diamond_pavers_wall", WallBlock::new, DIORITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_WALL = register("diorite_large_bricks_wall", WallBlock::new, DIORITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_CRACKED_WALL = register("diorite_large_bricks_cracked_wall", WallBlock::new, DIORITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_MOSSY_WALL = register("diorite_large_bricks_mossy_wall", WallBlock::new, DIORITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> DIORITE_SMALL_BRICK_WALL = register("diorite_small_brick_wall", WallBlock::new, DIORITE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_CREEPER_WALL = register("dark_prismarine_carved_creeper_wall", WallBlock::new, DARK_PRISMARINE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_DERP_WALL = register("dark_prismarine_carved_derp_wall", WallBlock::new, DARK_PRISMARINE_CARVED_DERP);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_VILLAGER_WALL = register("dark_prismarine_carved_villager_wall", WallBlock::new, DARK_PRISMARINE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WITHER_WALL = register("dark_prismarine_carved_wither_wall", WallBlock::new, DARK_PRISMARINE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WRITING_WALL = register("dark_prismarine_carved_writing_wall", WallBlock::new, DARK_PRISMARINE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COLUMN_WALL = register("dark_prismarine_column_wall", WallBlock::new, DARK_PRISMARINE_COLUMN);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CUT_WALL = register("dark_prismarine_cut_wall", WallBlock::new, DARK_PRISMARINE_CUT);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ENGRAVED_WALL = register("dark_prismarine_engraved_wall", WallBlock::new, DARK_PRISMARINE_ENGRAVED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PANELS_WALL = register("dark_prismarine_panels_wall", WallBlock::new, () -> Blocks.DARK_PRISMARINE);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PAVERS_WALL = register("dark_prismarine_pavers_wall", WallBlock::new, DARK_PRISMARINE_PAVERS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PILLAR_WALL = register("dark_prismarine_pillar_wall", WallBlock::new, DARK_PRISMARINE_PILLAR);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_POLISHED_WALL = register("dark_prismarine_polished_wall", WallBlock::new, DARK_PRISMARINE_POLISHED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ROUGH_CUT_WALL = register("dark_prismarine_rough_cut_wall", WallBlock::new, DARK_PRISMARINE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CHISELED_WALL = register("dark_prismarine_chiseled_wall", WallBlock::new, DARK_PRISMARINE_CHISELED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED_WALL = register("dark_prismarine_cobbled_wall", WallBlock::new, DARK_PRISMARINE_COBBLED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED_MOSSY_WALL = register("dark_prismarine_cobbled_mossy_wall", WallBlock::new, DARK_PRISMARINE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_DIAMOND_PAVERS_WALL = register("dark_prismarine_diamond_pavers_wall", WallBlock::new, DARK_PRISMARINE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_WALL = register("dark_prismarine_large_bricks_wall", WallBlock::new, DARK_PRISMARINE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED_WALL = register("dark_prismarine_large_bricks_cracked_wall", WallBlock::new, DARK_PRISMARINE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY_WALL = register("dark_prismarine_large_bricks_mossy_wall", WallBlock::new, DARK_PRISMARINE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_SMALL_BRICK_WALL = register("dark_prismarine_small_brick_wall", WallBlock::new, DARK_PRISMARINE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_CREEPER_WALL = register("prismarine_carved_creeper_wall", WallBlock::new, PRISMARINE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_DERP_WALL = register("prismarine_carved_derp_wall", WallBlock::new, PRISMARINE_CARVED_DERP);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_VILLAGER_WALL = register("prismarine_carved_villager_wall", WallBlock::new, PRISMARINE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WITHER_WALL = register("prismarine_carved_wither_wall", WallBlock::new, PRISMARINE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WRITING_WALL = register("prismarine_carved_writing_wall", WallBlock::new, PRISMARINE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> PRISMARINE_COLUMN_WALL = register("prismarine_column_wall", WallBlock::new, PRISMARINE_COLUMN);
    public static final RegistryObject<Block, Block> PRISMARINE_CUT_WALL = register("prismarine_cut_wall", WallBlock::new, PRISMARINE_CUT);
    public static final RegistryObject<Block, Block> PRISMARINE_ENGRAVED_WALL = register("prismarine_engraved_wall", WallBlock::new, PRISMARINE_ENGRAVED);
    public static final RegistryObject<Block, Block> PRISMARINE_PANELS_WALL = register("prismarine_panels_wall", WallBlock::new, PRISMARINE_PANELS);
    public static final RegistryObject<Block, Block> PRISMARINE_PAVERS_WALL = register("prismarine_pavers_wall", WallBlock::new, () -> Blocks.PRISMARINE);
    public static final RegistryObject<Block, Block> PRISMARINE_PILLAR_WALL = register("prismarine_pillar_wall", WallBlock::new, PRISMARINE_PILLAR);
    public static final RegistryObject<Block, Block> PRISMARINE_POLISHED_WALL = register("prismarine_polished_wall", WallBlock::new, PRISMARINE_POLISHED);
    public static final RegistryObject<Block, Block> PRISMARINE_ROUGH_CUT_WALL = register("prismarine_rough_cut_wall", WallBlock::new, PRISMARINE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> PRISMARINE_CHISELED_WALL = register("prismarine_chiseled_wall", WallBlock::new, PRISMARINE_CHISELED);
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED_WALL = register("prismarine_cobbled_wall", WallBlock::new, PRISMARINE_COBBLED);
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED_MOSSY_WALL = register("prismarine_cobbled_mossy_wall", WallBlock::new, PRISMARINE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> PRISMARINE_DIAMOND_PAVERS_WALL = register("prismarine_diamond_pavers_wall", WallBlock::new, PRISMARINE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_WALL = register("prismarine_large_bricks_wall", WallBlock::new, PRISMARINE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_CRACKED_WALL = register("prismarine_large_bricks_cracked_wall", WallBlock::new, PRISMARINE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_MOSSY_WALL = register("prismarine_large_bricks_mossy_wall", WallBlock::new, PRISMARINE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> PRISMARINE_SMALL_BRICK_WALL = register("prismarine_small_brick_wall", WallBlock::new, PRISMARINE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> STONE_CHISELED_WALL = register("stone_chiseled_wall", WallBlock::new, () -> Blocks.CHISELED_STONE_BRICKS);
    public static final RegistryObject<Block, Block> STONE_COBBLED_WALL = register("stone_cobbled_wall", WallBlock::new, () -> Blocks.COBBLESTONE);
    public static final RegistryObject<Block, Block> STONE_COBBLED_MOSSY_WALL = register("stone_cobbled_mossy_wall", WallBlock::new, () -> Blocks.MOSSY_COBBLESTONE);
    public static final RegistryObject<Block, Block> STONE_DIAMOND_PAVERS_WALL = register("stone_diamond_pavers_wall", WallBlock::new, STONE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> STONE_LARGE_BRICKS_WALL = register("stone_large_bricks_wall", WallBlock::new, () -> Blocks.STONE_BRICKS);
    public static final RegistryObject<Block, Block> STONE_LARGE_BRICKS_CRACKED_WALL = register("stone_large_bricks_cracked_wall", WallBlock::new, () -> Blocks.CRACKED_STONE_BRICKS);
    public static final RegistryObject<Block, Block> STONE_LARGE_BRICKS_MOSSY_WALL = register("stone_large_bricks_mossy_wall", WallBlock::new, () -> Blocks.MOSSY_STONE_BRICKS);
    public static final RegistryObject<Block, Block> GRANITE_CHISELED_WALL = register("granite_chiseled_wall", WallBlock::new, GRANITE_CHISELED);
    public static final RegistryObject<Block, Block> GRANITE_COBBLED_WALL = register("granite_cobbled_wall", WallBlock::new, GRANITE_COBBLED);
    public static final RegistryObject<Block, Block> GRANITE_COBBLED_MOSSY_WALL = register("granite_cobbled_mossy_wall", WallBlock::new, GRANITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> GRANITE_DIAMOND_PAVERS_WALL = register("granite_diamond_pavers_wall", WallBlock::new, GRANITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_WALL = register("granite_large_bricks_wall", WallBlock::new, GRANITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_CRACKED_WALL = register("granite_large_bricks_cracked_wall", WallBlock::new, GRANITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_MOSSY_WALL = register("granite_large_bricks_mossy_wall", WallBlock::new, GRANITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> GRANITE_SMALL_BRICK_WALL = register("granite_small_brick_wall", WallBlock::new, GRANITE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> ANDESITE_CHISELED_WALL = register("andesite_chiseled_wall", WallBlock::new, ANDESITE_CHISELED);
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED_WALL = register("andesite_cobbled_wall", WallBlock::new, ANDESITE_COBBLED);
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED_MOSSY_WALL = register("andesite_cobbled_mossy_wall", WallBlock::new, ANDESITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> ANDESITE_DIAMOND_PAVERS_WALL = register("andesite_diamond_pavers_wall", WallBlock::new, ANDESITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_WALL = register("andesite_large_bricks_wall", WallBlock::new, ANDESITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_CRACKED_WALL = register("andesite_large_bricks_cracked_wall", WallBlock::new, ANDESITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_MOSSY_WALL = register("andesite_large_bricks_mossy_wall", WallBlock::new, ANDESITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> ANDESITE_SMALL_BRICK_WALL = register("andesite_small_brick_wall", WallBlock::new, ANDESITE_SMALL_BRICK);

    /**
     * Slab Blocks
     */
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_TILED_SLAB = register("dark_prismarine_tiled_slab", SlabBlock::new, DARK_PRISMARINE_TILED);
    public static final RegistryObject<Block, Block> DIORITE_TILED_SLAB = register("diorite_tiled_slab", SlabBlock::new, DIORITE_TILED);
    public static final RegistryObject<Block, Block> END_STONE_TILED_SLAB = register("end_stone_tiled_slab", SlabBlock::new, END_STONE_TILED);
    public static final RegistryObject<Block, Block> NETHERRACK_TILED_SLAB = register("netherrack_tiled_slab", SlabBlock::new, NETHERRACK_TILED);
    public static final RegistryObject<Block, Block> OBSIDIAN_TILED_SLAB = register("obsidian_tiled_slab", SlabBlock::new, OBSIDIAN_TILED);
    public static final RegistryObject<Block, Block> PRISMARINE_TILED_SLAB = register("prismarine_tiled_slab", SlabBlock::new, PRISMARINE_TILED);
    public static final RegistryObject<Block, Block> STONE_CARVED_CREEPER_SLAB = register("stone_carved_creeper_slab", SlabBlock::new, STONE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> STONE_CARVED_DERP_SLAB = register("stone_carved_derp_slab", SlabBlock::new, STONE_CARVED_DERP);
    public static final RegistryObject<Block, Block> STONE_CARVED_VILLAGER_SLAB = register("stone_carved_villager_slab", SlabBlock::new, STONE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> STONE_CARVED_WITHER_SLAB = register("stone_carved_wither_slab", SlabBlock::new, STONE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> STONE_CARVED_WRITING_SLAB = register("stone_carved_writing_slab", SlabBlock::new, STONE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> STONE_COLUMN_SLAB = register("stone_column_slab", SlabBlock::new, STONE_COLUMN);
    public static final RegistryObject<Block, Block> STONE_CUT_SLAB = register("stone_cut_slab", SlabBlock::new, STONE_CUT);
    public static final RegistryObject<Block, Block> STONE_ENGRAVED_SLAB = register("stone_engraved_slab", SlabBlock::new, STONE_ENGRAVED);
    public static final RegistryObject<Block, Block> STONE_PANELS_SLAB = register("stone_panels_slab", SlabBlock::new, STONE_PANELS);
    public static final RegistryObject<Block, Block> STONE_PAVERS_SLAB = register("stone_pavers_slab", SlabBlock::new, STONE_PAVERS);
    public static final RegistryObject<Block, Block> STONE_PILLAR_SLAB = register("stone_pillar_slab", SlabBlock::new, STONE_PILLAR);
    public static final RegistryObject<Block, Block> STONE_POLISHED_SLAB = register("stone_polished_slab", SlabBlock::new, STONE_POLISHED);
    public static final RegistryObject<Block, Block> STONE_ROUGH_CUT_SLAB = register("stone_rough_cut_slab", SlabBlock::new, STONE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> STONE_TILED_SLAB = register("stone_tiled_slab", SlabBlock::new, STONE_TILED);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_CREEPER_SLAB = register("granite_carved_creeper_slab", SlabBlock::new, GRANITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_DERP_SLAB = register("granite_carved_derp_slab", SlabBlock::new, GRANITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_VILLAGER_SLAB = register("granite_carved_villager_slab", SlabBlock::new, GRANITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WITHER_SLAB = register("granite_carved_wither_slab", SlabBlock::new, GRANITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> GRANITE_CARVED_WRITING_SLAB = register("granite_carved_writing_slab", SlabBlock::new, GRANITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> GRANITE_COLUMN_SLAB = register("granite_column_slab", SlabBlock::new, GRANITE_COLUMN);
    public static final RegistryObject<Block, Block> GRANITE_CUT_SLAB = register("granite_cut_slab", SlabBlock::new, GRANITE_CUT);
    public static final RegistryObject<Block, Block> GRANITE_ENGRAVED_SLAB = register("granite_engraved_slab", SlabBlock::new, GRANITE_ENGRAVED);
    public static final RegistryObject<Block, Block> GRANITE_PANELS_SLAB = register("granite_panels_slab", SlabBlock::new, GRANITE_PANELS);
    public static final RegistryObject<Block, Block> GRANITE_PAVERS_SLAB = register("granite_pavers_slab", SlabBlock::new, GRANITE_PAVERS);
    public static final RegistryObject<Block, Block> GRANITE_PILLAR_SLAB = register("granite_pillar_slab", SlabBlock::new, GRANITE_PILLAR);
    public static final RegistryObject<Block, Block> GRANITE_ROUGH_CUT_SLAB = register("granite_rough_cut_slab", SlabBlock::new, GRANITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> GRANITE_TILED_SLAB = register("granite_tiled_slab", SlabBlock::new, GRANITE_TILED);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_CREEPER_SLAB = register("andesite_carved_creeper_slab", SlabBlock::new, ANDESITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_DERP_SLAB = register("andesite_carved_derp_slab", SlabBlock::new, ANDESITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_VILLAGER_SLAB = register("andesite_carved_villager_slab", SlabBlock::new, ANDESITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WITHER_SLAB = register("andesite_carved_wither_slab", SlabBlock::new, ANDESITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> ANDESITE_CARVED_WRITING_SLAB = register("andesite_carved_writing_slab", SlabBlock::new, ANDESITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> ANDESITE_COLUMN_SLAB = register("andesite_column_slab", SlabBlock::new, ANDESITE_COLUMN);
    public static final RegistryObject<Block, Block> ANDESITE_CUT_SLAB = register("andesite_cut_slab", SlabBlock::new, ANDESITE_CUT);
    public static final RegistryObject<Block, Block> ANDESITE_ENGRAVED_SLAB = register("andesite_engraved_slab", SlabBlock::new, ANDESITE_ENGRAVED);
    public static final RegistryObject<Block, Block> ANDESITE_PANELS_SLAB = register("andesite_panels_slab", SlabBlock::new, ANDESITE_PANELS);
    public static final RegistryObject<Block, Block> ANDESITE_PAVERS_SLAB = register("andesite_pavers_slab", SlabBlock::new, ANDESITE_PAVERS);
    public static final RegistryObject<Block, Block> ANDESITE_PILLAR_SLAB = register("andesite_pillar_slab", SlabBlock::new, ANDESITE_PILLAR);
    public static final RegistryObject<Block, Block> ANDESITE_ROUGH_CUT_SLAB = register("andesite_rough_cut_slab", SlabBlock::new, ANDESITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> ANDESITE_TILED_SLAB = register("andesite_tiled_slab", SlabBlock::new, ANDESITE_TILED);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_CREEPER_SLAB = register("diorite_carved_creeper_slab", SlabBlock::new, DIORITE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_DERP_SLAB = register("diorite_carved_derp_slab", SlabBlock::new, DIORITE_CARVED_DERP);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_VILLAGER_SLAB = register("diorite_carved_villager_slab", SlabBlock::new, DIORITE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WITHER_SLAB = register("diorite_carved_wither_slab", SlabBlock::new, DIORITE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> DIORITE_CARVED_WRITING_SLAB = register("diorite_carved_writing_slab", SlabBlock::new, DIORITE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> DIORITE_COLUMN_SLAB = register("diorite_column_slab", SlabBlock::new, DIORITE_COLUMN);
    public static final RegistryObject<Block, Block> DIORITE_CUT_SLAB = register("diorite_cut_slab", SlabBlock::new, DIORITE_CUT);
    public static final RegistryObject<Block, Block> DIORITE_ENGRAVED_SLAB = register("diorite_engraved_slab", SlabBlock::new, DIORITE_ENGRAVED);
    public static final RegistryObject<Block, Block> DIORITE_PANELS_SLAB = register("diorite_panels_slab", SlabBlock::new, DIORITE_PANELS);
    public static final RegistryObject<Block, Block> DIORITE_PAVERS_SLAB = register("diorite_pavers_slab", SlabBlock::new, DIORITE_PAVERS);
    public static final RegistryObject<Block, Block> DIORITE_PILLAR_SLAB = register("diorite_pillar_slab", SlabBlock::new, DIORITE_PILLAR);
    public static final RegistryObject<Block, Block> DIORITE_ROUGH_CUT_SLAB = register("diorite_rough_cut_slab", SlabBlock::new, DIORITE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> DIORITE_CHISELED_SLAB = register("diorite_chiseled_slab", SlabBlock::new, DIORITE_CHISELED);
    public static final RegistryObject<Block, Block> DIORITE_COBBLED_SLAB = register("diorite_cobbled_slab", SlabBlock::new, DIORITE_COBBLED);
    public static final RegistryObject<Block, Block> DIORITE_COBBLED_MOSSY_SLAB = register("diorite_cobbled_mossy_slab", SlabBlock::new, DIORITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> DIORITE_DIAMOND_PAVERS_SLAB = register("diorite_diamond_pavers_slab", SlabBlock::new, DIORITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_SLAB = register("diorite_large_bricks_slab", SlabBlock::new, DIORITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_CRACKED_SLAB = register("diorite_large_bricks_cracked_slab", SlabBlock::new, DIORITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> DIORITE_LARGE_BRICKS_MOSSY_SLAB = register("diorite_large_bricks_mossy_slab", SlabBlock::new, DIORITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> DIORITE_SMALL_BRICK_SLAB = register("diorite_small_brick_slab", SlabBlock::new, DIORITE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_CREEPER_SLAB = register("dark_prismarine_carved_creeper_slab", SlabBlock::new, DARK_PRISMARINE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_DERP_SLAB = register("dark_prismarine_carved_derp_slab", SlabBlock::new, DARK_PRISMARINE_CARVED_DERP);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_VILLAGER_SLAB = register("dark_prismarine_carved_villager_slab", SlabBlock::new, DARK_PRISMARINE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WITHER_SLAB = register("dark_prismarine_carved_wither_slab", SlabBlock::new, DARK_PRISMARINE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CARVED_WRITING_SLAB = register("dark_prismarine_carved_writing_slab", SlabBlock::new, DARK_PRISMARINE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COLUMN_SLAB = register("dark_prismarine_column_slab", SlabBlock::new, DARK_PRISMARINE_COLUMN);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CUT_SLAB = register("dark_prismarine_cut_slab", SlabBlock::new, DARK_PRISMARINE_CUT);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ENGRAVED_SLAB = register("dark_prismarine_engraved_slab", SlabBlock::new, DARK_PRISMARINE_ENGRAVED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PAVERS_SLAB = register("dark_prismarine_pavers_slab", SlabBlock::new, DARK_PRISMARINE_PAVERS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_PILLAR_SLAB = register("dark_prismarine_pillar_slab", SlabBlock::new, DARK_PRISMARINE_PILLAR);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_POLISHED_SLAB = register("dark_prismarine_polished_slab", SlabBlock::new, DARK_PRISMARINE_POLISHED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_ROUGH_CUT_SLAB = register("dark_prismarine_rough_cut_slab", SlabBlock::new, DARK_PRISMARINE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_CHISELED_SLAB = register("dark_prismarine_chiseled_slab", SlabBlock::new, DARK_PRISMARINE_CHISELED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED_SLAB = register("dark_prismarine_cobbled_slab", SlabBlock::new, DARK_PRISMARINE_COBBLED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_COBBLED_MOSSY_SLAB = register("dark_prismarine_cobbled_mossy_slab", SlabBlock::new, DARK_PRISMARINE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_DIAMOND_PAVERS_SLAB = register("dark_prismarine_diamond_pavers_slab", SlabBlock::new, DARK_PRISMARINE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_SLAB = register("dark_prismarine_large_bricks_slab", SlabBlock::new, DARK_PRISMARINE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_CRACKED_SLAB = register("dark_prismarine_large_bricks_cracked_slab", SlabBlock::new, DARK_PRISMARINE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_LARGE_BRICKS_MOSSY_SLAB = register("dark_prismarine_large_bricks_mossy_slab", SlabBlock::new, DARK_PRISMARINE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> DARK_PRISMARINE_SMALL_BRICK_SLAB = register("dark_prismarine_small_brick_slab", SlabBlock::new, DARK_PRISMARINE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_CREEPER_SLAB = register("prismarine_carved_creeper_slab", SlabBlock::new, PRISMARINE_CARVED_CREEPER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_DERP_SLAB = register("prismarine_carved_derp_slab", SlabBlock::new, PRISMARINE_CARVED_DERP);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_VILLAGER_SLAB = register("prismarine_carved_villager_slab", SlabBlock::new, PRISMARINE_CARVED_VILLAGER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WITHER_SLAB = register("prismarine_carved_wither_slab", SlabBlock::new, PRISMARINE_CARVED_WITHER);
    public static final RegistryObject<Block, Block> PRISMARINE_CARVED_WRITING_SLAB = register("prismarine_carved_writing_slab", SlabBlock::new, PRISMARINE_CARVED_WRITING);
    public static final RegistryObject<Block, Block> PRISMARINE_COLUMN_SLAB = register("prismarine_column_slab", SlabBlock::new, PRISMARINE_COLUMN);
    public static final RegistryObject<Block, Block> PRISMARINE_CUT_SLAB = register("prismarine_cut_slab", SlabBlock::new, PRISMARINE_CUT);
    public static final RegistryObject<Block, Block> PRISMARINE_ENGRAVED_SLAB = register("prismarine_engraved_slab", SlabBlock::new, PRISMARINE_ENGRAVED);
    public static final RegistryObject<Block, Block> PRISMARINE_PANELS_SLAB = register("prismarine_panels_slab", SlabBlock::new, PRISMARINE_PANELS);
    public static final RegistryObject<Block, Block> PRISMARINE_PILLAR_SLAB = register("prismarine_pillar_slab", SlabBlock::new, PRISMARINE_PILLAR);
    public static final RegistryObject<Block, Block> PRISMARINE_POLISHED_SLAB = register("prismarine_polished_slab", SlabBlock::new, PRISMARINE_POLISHED);
    public static final RegistryObject<Block, Block> PRISMARINE_ROUGH_CUT_SLAB = register("prismarine_rough_cut_slab", SlabBlock::new, PRISMARINE_ROUGH_CUT);
    public static final RegistryObject<Block, Block> PRISMARINE_CHISELED_SLAB = register("prismarine_chiseled_slab", SlabBlock::new, PRISMARINE_CHISELED);
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED_SLAB = register("prismarine_cobbled_slab", SlabBlock::new, PRISMARINE_COBBLED);
    public static final RegistryObject<Block, Block> PRISMARINE_COBBLED_MOSSY_SLAB = register("prismarine_cobbled_mossy_slab", SlabBlock::new, PRISMARINE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> PRISMARINE_DIAMOND_PAVERS_SLAB = register("prismarine_diamond_pavers_slab", SlabBlock::new, PRISMARINE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_SLAB = register("prismarine_large_bricks_slab", SlabBlock::new, PRISMARINE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_CRACKED_SLAB = register("prismarine_large_bricks_cracked_slab", SlabBlock::new, PRISMARINE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> PRISMARINE_LARGE_BRICKS_MOSSY_SLAB = register("prismarine_large_bricks_mossy_slab", SlabBlock::new, PRISMARINE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> PRISMARINE_SMALL_BRICK_SLAB = register("prismarine_small_brick_slab", SlabBlock::new, PRISMARINE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> STONE_CHISELED_SLAB = register("stone_chiseled_slab", SlabBlock::new, () -> Blocks.CHISELED_STONE_BRICKS);
    public static final RegistryObject<Block, Block> STONE_DIAMOND_PAVERS_SLAB = register("stone_diamond_pavers_slab", SlabBlock::new, STONE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> STONE_LARGE_BRICKS_CRACKED_SLAB = register("stone_large_bricks_cracked_slab", SlabBlock::new, () -> Blocks.CRACKED_STONE_BRICKS);
    public static final RegistryObject<Block, Block> GRANITE_CHISELED_SLAB = register("granite_chiseled_slab", SlabBlock::new, GRANITE_CHISELED);
    public static final RegistryObject<Block, Block> GRANITE_COBBLED_SLAB = register("granite_cobbled_slab", SlabBlock::new, GRANITE_COBBLED);
    public static final RegistryObject<Block, Block> GRANITE_COBBLED_MOSSY_SLAB = register("granite_cobbled_mossy_slab", SlabBlock::new, GRANITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> GRANITE_DIAMOND_PAVERS_SLAB = register("granite_diamond_pavers_slab", SlabBlock::new, GRANITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_SLAB = register("granite_large_bricks_slab", SlabBlock::new, GRANITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_CRACKED_SLAB = register("granite_large_bricks_cracked_slab", SlabBlock::new, GRANITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> GRANITE_LARGE_BRICKS_MOSSY_SLAB = register("granite_large_bricks_mossy_slab", SlabBlock::new, GRANITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> GRANITE_SMALL_BRICK_SLAB = register("granite_small_brick_slab", SlabBlock::new, GRANITE_SMALL_BRICK);
    public static final RegistryObject<Block, Block> ANDESITE_CHISELED_SLAB = register("andesite_chiseled_slab", SlabBlock::new, ANDESITE_CHISELED);
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED_SLAB = register("andesite_cobbled_slab", SlabBlock::new, ANDESITE_COBBLED);
    public static final RegistryObject<Block, Block> ANDESITE_COBBLED_MOSSY_SLAB = register("andesite_cobbled_mossy_slab", SlabBlock::new, ANDESITE_COBBLED_MOSSY);
    public static final RegistryObject<Block, Block> ANDESITE_DIAMOND_PAVERS_SLAB = register("andesite_diamond_pavers_slab", SlabBlock::new, ANDESITE_DIAMOND_PAVERS);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_SLAB = register("andesite_large_bricks_slab", SlabBlock::new, ANDESITE_LARGE_BRICKS);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_CRACKED_SLAB = register("andesite_large_bricks_cracked_slab", SlabBlock::new, ANDESITE_LARGE_BRICKS_CRACKED);
    public static final RegistryObject<Block, Block> ANDESITE_LARGE_BRICKS_MOSSY_SLAB = register("andesite_large_bricks_mossy_slab", SlabBlock::new, ANDESITE_LARGE_BRICKS_MOSSY);
    public static final RegistryObject<Block, Block> ANDESITE_SMALL_BRICK_SLAB = register("andesite_small_brick_slab", SlabBlock::new, ANDESITE_SMALL_BRICK);

    public static RegistryObject<Block, Block> register(String name, Function<BlockBehaviour.Properties, Block> factory, Supplier<Block> blockSupplier) {
        ResourceLocation id = id(name);
        RegistryObject<Block, Block> blockObject = register(id, BLOCK_DEFERRED.register(name, () -> factory.apply(BlockBehaviour.Properties.ofLegacyCopy(blockSupplier.get()).setId(blockKey(id)))));
        BASED_ON.put(blockObject, blockSupplier);
        return blockObject;
    }

    private static RegistryObject<Block, Block> register(String name, Function<BlockBehaviour.Properties, Block> factory, Block.Properties properties) {
        ResourceLocation id = id(name);
        return register(id, BLOCK_DEFERRED.register(name, () -> factory.apply(properties.setId(blockKey(id)))));
    }

    private static RegistryObject<Block, Block> register(ResourceLocation id, RegistryObject<Block, Block> block) {
        RegistryObject<Item, BlockItem> blockItem = ITEM_DEFERRED.register(id.getPath(), () -> new BlockItem(block.get(), new Item.Properties().setId(ResourceKey.create(Registries.ITEM, id)).useBlockDescriptionPrefix()));
        BLOCKS.add(block);
        BLOCK_ITEMS.add(blockItem);

        return block;
    }

    public static ResourceLocation id (String name) {
        return ResourceLocation.fromNamespaceAndPath(MasonryCommon.MOD_ID, name);
    }

    public static ResourceKey<Block> blockKey(ResourceLocation id) {
        return ResourceKey.create(Registries.BLOCK, id);
    }

    //Needed to statically initialize fields
    public static void load() {
    }
}